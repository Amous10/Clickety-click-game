{"ast":null,"code":"var _jsxFileName = \"/Users/amous/bootcamp/homework/Clickety-click-game/src/App.js\";\nimport React, { Component } from 'react'; // import Body from './components/Body';\n\nimport FriendCard from './components/FriendCard';\nimport Nav from './components/Nav';\nimport Title from './components/Title';\nimport Wrapper from './components/Wrapper';\nimport friends from './friends.json';\nimport Column from './Column';\nimport Row from './Row';\nimport Container from './Container';\nimport './App.css'; // function App() {\n//   return <div>Hi</div>;\n// }\n// export default App;\n\nfunction shuffleFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      currentScore: 0,\n      topScore: 0,\n      rightWrong: '',\n      clicked: []\n    };\n\n    this.handleClick = id => {\n      if (this.state.clicked.indexOf(id) === -1) {\n        this.handleIncrement();\n        this.setState({\n          clicked: this.state.clicked.concat(id)\n        });\n      } else {\n        this.handleReset();\n      }\n    };\n\n    this.handleIncrement = () => {\n      const newScore = this.state.currentScore + 1;\n      this.setState({\n        currentScore: newScore,\n        rightWrong: ''\n      });\n\n      if (newScore >= this.state.topScore) {\n        this.setState({\n          topScore: newScore\n        });\n      } else if (newScore === 12) {\n        this.setState({\n          rightWrong: 'You ROCK!!!'\n        });\n      }\n\n      this.handleShuffle();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        currentScore: 0,\n        topScore: this.state.topScore,\n        rightWrong: 'Nope!:-(',\n        clicked: []\n      });\n      this.handleShuffle();\n    };\n\n    this.handleShuffle = () => {\n      let shuffledFriends = shuffleFriends(friends);\n      this.setState({\n        friends: shuffledFriends\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      title: \"Giphy Clicky Game\",\n      rightWrong: this.state.rightWrong,\n      score: this.state.currentScore,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Click on an image to earn points, but do not click on any more than once!!!\"), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(Column, {\n      size: \"md-3 sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FriendCard, {\n      key: friend.id,\n      id: friend.id,\n      image: friend.image,\n      handleClick: this.handleClick,\n      handleIncrement: this.handleIncrement,\n      handleReset: this.handleReset,\n      handleShuffle: this.handleShuffle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amous/bootcamp/homework/Clickety-click-game/src/App.js"],"names":["React","Component","FriendCard","Nav","Title","Wrapper","friends","Column","Row","Container","shuffleFriends","array","i","length","j","Math","floor","random","App","state","currentScore","topScore","rightWrong","clicked","handleClick","id","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledFriends","render","map","friend","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import Body from './components/Body';\nimport FriendCard from './components/FriendCard';\nimport Nav from './components/Nav';\nimport Title from './components/Title';\nimport Wrapper from './components/Wrapper';\nimport friends from './friends.json';\nimport Column from './Column';\nimport Row from './Row';\nimport Container from './Container';\nimport './App.css';\n// function App() {\n//   return <div>Hi</div>;\n// }\n// export default App;\n\nfunction shuffleFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    friends,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: '',\n    clicked: []\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      rightWrong: ''\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    } else if (newScore === 12) {\n      this.setState({ rightWrong: 'You ROCK!!!' });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      rightWrong: 'Nope!:-(',\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledFriends = shuffleFriends(friends);\n    this.setState({ friends: shuffledFriends });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav\n          title=\"Giphy Clicky Game\"\n          rightWrong={this.state.rightWrong}\n          score={this.state.currentScore}\n          topScore={this.state.topScore}\n        />\n\n        <Title>\n          Click on an image to earn points, but do not click on any more than\n          once!!!\n        </Title>\n\n        <Container>\n          <Row>\n            {this.state.friends.map(friend => (\n              <Column size=\"md-3 sm-6\">\n                <FriendCard\n                  key={friend.id}\n                  id={friend.id}\n                  image={friend.image}\n                  handleClick={this.handleClick}\n                  handleIncrement={this.handleIncrement}\n                  handleReset={this.handleReset}\n                  handleShuffle={this.handleShuffle}\n                />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}